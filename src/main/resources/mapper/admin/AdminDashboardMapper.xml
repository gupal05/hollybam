<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hollybam.hollybam.dao.admin.IF_AdminDashboardDao">
    <!-- 전체 조회 -->
    <select id="selectSummaryAll" resultType="map">
    <![CDATA[
        SELECT
            /* 총 결제 금액 */
            (SELECT SUM(o.final_amount)
             FROM hollybam.orders o
            ) AS `총 결제 금액`,

            /* 취소/환불 금액 */
            (SELECT COALESCE(SUM(o.final_amount),0)
             FROM hollybam.orders o
             WHERE o.payment_status IN ('REFUNDED','CANCELLED')
            ) AS `취소/환불 금액`,

            /* 순 매출(배송비 포함) */
            (
                (SELECT SUM(o.final_amount) FROM hollybam.orders o)
                    -
                (SELECT COALESCE(SUM(o.final_amount),0)
                 FROM hollybam.orders o
                 WHERE o.payment_status IN ('REFUNDED','CANCELLED')
                )
                ) AS `순 매출(배송비 포함)`,

            /* 쿠폰 할인 금액 */
            (SELECT COALESCE(SUM(cm.discount_amount),0)
             FROM hollybam.coupon_member cm
            ) AS `쿠폰 할인 금액`,

            /* 할인코드 할인 금액 */
            (SELECT COALESCE(SUM(dcu.discount_amount),0)
             FROM hollybam.discount_code_usage dcu
            ) AS `할인코드 할인 금액`,

            /* 포인트 할인 금액 */
            (SELECT COALESCE(SUM(-p.point_change),0)
             FROM hollybam.point p
             WHERE p.point_type = 'USE'
            ) AS `포인트 할인 금액`,

            /* 총 할인 금액 */
            (
                (SELECT COALESCE(SUM(cm.discount_amount),0) FROM hollybam.coupon_member cm)
                    +
                (SELECT COALESCE(SUM(dcu.discount_amount),0) FROM hollybam.discount_code_usage dcu)
                    +
                (SELECT COALESCE(SUM(-p.point_change),0)
                 FROM hollybam.point p
                 WHERE p.point_type = 'USE'
                )
                ) AS `총 할인 금액`,

            /* 순수익(할인 미제외) */
            (SELECT
                 SUM(oi.total_price)
                     - SUM(pr.price_cost * oi.quantity)
                     + SUM(o.delivery_fee)
             FROM hollybam.orders o
                      JOIN hollybam.order_items oi ON o.order_code = oi.order_code
                      JOIN hollybam.price       pr ON oi.product_code = pr.product_code
            ) AS `순수익(할인 미제외)`,

            /* 순수익(할인 제외) */
            (
                (SELECT
                     SUM(oi.total_price)
                         - SUM(pr.price_cost * oi.quantity)
                         + SUM(o.delivery_fee)
                 FROM hollybam.orders o
                          JOIN hollybam.order_items oi ON o.order_code = oi.order_code
                          JOIN hollybam.price       pr ON oi.product_code = pr.product_code
                )
                    -
                (
                    (SELECT COALESCE(SUM(cm.discount_amount),0) FROM hollybam.coupon_member cm)
                        +
                    (SELECT COALESCE(SUM(dcu.discount_amount),0) FROM hollybam.discount_code_usage dcu)
                        +
                    (SELECT COALESCE(SUM(-p.point_change),0)
                     FROM hollybam.point p
                     WHERE p.point_type = 'USE'
                    )
                    )
                ) AS `순수익(할인 제외)`
        ]]>
  </select>


    <!-- 기간 조회 -->
    <select id="selectSummaryByPeriod" parameterType="map" resultType="map">
    <![CDATA[
        SELECT
            /* 총 결제 금액 */
            (SELECT SUM(o.final_amount)
             FROM hollybam.orders o
             WHERE o.create_at BETWEEN #{startDate} AND #{endDate}
            ) AS `총 결제 금액`,

            /* 취소/환불 금액 */
            (SELECT COALESCE(SUM(o.final_amount),0)
             FROM hollybam.orders o
             WHERE o.payment_status IN ('REFUNDED','CANCELLED')
               AND o.create_at BETWEEN #{startDate} AND #{endDate}
            ) AS `취소/환불 금액`,

            /* 순 매출(배송비 포함) */
            (
                (SELECT SUM(o.final_amount)
                 FROM hollybam.orders o
                 WHERE o.create_at BETWEEN #{startDate} AND #{endDate}
                )
                    -
                (SELECT COALESCE(SUM(o.final_amount),0)
                 FROM hollybam.orders o
                 WHERE o.payment_status IN ('REFUNDED','CANCELLED')
                   AND o.create_at BETWEEN #{startDate} AND #{endDate}
                )
                ) AS `순 매출(배송비 포함)`,

            /* 쿠폰 할인 금액 */
            (SELECT COALESCE(SUM(cm.discount_amount),0)
             FROM hollybam.coupon_member cm
                      JOIN hollybam.orders o ON cm.order_code = o.order_code
             WHERE cm.used = 1
               AND o.create_at BETWEEN #{startDate} AND #{endDate}
            ) AS `쿠폰 할인 금액`,

            /* 할인코드 할인 금액 */
            (SELECT COALESCE(SUM(dcu.discount_amount),0)
             FROM hollybam.discount_code_usage dcu
                      JOIN hollybam.orders o ON dcu.order_code = o.order_code
             WHERE o.create_at BETWEEN #{startDate} AND #{endDate}
            ) AS `할인코드 할인 금액`,

            /* 포인트 할인 금액 */
            (SELECT COALESCE(SUM(-p.point_change),0)
             FROM hollybam.point p
                      JOIN hollybam.orders o ON p.related_order_code = o.order_code
             WHERE p.point_type = 'USE'
               AND o.create_at BETWEEN #{startDate} AND #{endDate}
            ) AS `포인트 할인 금액`,

            /* 총 할인 금액 */
            (
                (SELECT COALESCE(SUM(cm.discount_amount),0)
                 FROM hollybam.coupon_member cm
                          JOIN hollybam.orders o ON cm.order_code = o.order_code
                 WHERE cm.used = 1
                   AND o.create_at BETWEEN #{startDate} AND #{endDate}
                )
                    +
                (SELECT COALESCE(SUM(dcu.discount_amount),0)
                 FROM hollybam.discount_code_usage dcu
                          JOIN hollybam.orders o ON dcu.order_code = o.order_code
                 WHERE o.create_at BETWEEN #{startDate} AND #{endDate}
                )
                    +
                (SELECT COALESCE(SUM(-p.point_change),0)
                 FROM hollybam.point p
                          JOIN hollybam.orders o ON p.related_order_code = o.order_code
                 WHERE p.point_type = 'USE'
                   AND o.create_at BETWEEN #{startDate} AND #{endDate}
                )
                ) AS `총 할인 금액`,

            /* 순수익(할인 미제외) */
            (SELECT
                 SUM(oi.total_price)
                     - SUM(pr.price_cost * oi.quantity)
                     + SUM(o.delivery_fee)
             FROM hollybam.orders o
                      JOIN hollybam.order_items oi ON o.order_code = oi.order_code
                      JOIN hollybam.price       pr ON oi.product_code = pr.product_code
             WHERE o.create_at BETWEEN #{startDate} AND #{endDate}
            ) AS `순수익(할인 미제외)`,

            /* 순수익(할인 제외) */
            (
                (SELECT
                     SUM(oi.total_price)
                         - SUM(pr.price_cost * oi.quantity)
                         + SUM(o.delivery_fee)
                 FROM hollybam.orders o
                          JOIN hollybam.order_items oi ON o.order_code = oi.order_code
                          JOIN hollybam.price       pr ON oi.product_code = pr.product_code
                 WHERE o.create_at BETWEEN #{startDate} AND #{endDate}
                )
                    -
                (
                    (SELECT COALESCE(SUM(cm.discount_amount),0)
                     FROM hollybam.coupon_member cm
                              JOIN hollybam.orders o ON cm.order_code = o.order_code
                     WHERE cm.used = 1
                       AND o.create_at BETWEEN #{startDate} AND #{endDate}
                    )
                        +
                    (SELECT COALESCE(SUM(dcu.discount_amount),0)
                     FROM hollybam.discount_code_usage dcu
                              JOIN hollybam.orders o ON dcu.order_code = o.order_code
                     WHERE o.create_at BETWEEN #{startDate} AND #{endDate}
                    )
                        +
                    (SELECT COALESCE(SUM(-p.point_change),0)
                     FROM hollybam.point p
                              JOIN hollybam.orders o ON p.related_order_code = o.order_code
                     WHERE p.point_type = 'USE'
                       AND o.create_at BETWEEN #{startDate} AND #{endDate}
                    )
                    )
                ) AS `순수익(할인 제외)`
        ]]>
  </select>

    <!--  총 주문 수량 -->
    <select id="adminSelectOrderCount" resultType="int">
        SELECT
            COUNT(*)
                - COALESCE(
                    SUM(
                            CASE
                                WHEN payment_status IN ('CANCELLED','REFUNDED') THEN 1
                                ELSE 0
                                END
                    ), 0
                  )
        FROM orders
        WHERE payment_status != 'FAILED'
    </select>


    <!-- 회원 수 조회 -->
    <select id="adminSelectMemberCount" resultType="int">
        select count(*)
        from member
    </select>

    <!-- 총 상품 수량 -->
    <select id="adminSelectProductCount" resultType="int">
        select count(*)
        from product
    </select>

    <!-- 총 결제 금액(취소/환불 고려X) -->
    <select id="adminSelectTotalPaymentAmount" resultType="long" parameterType="map">
        SELECT
        IFNULL(SUM(o.final_amount), 0)
        FROM hollybam.orders o
        <where>
            o.payment_status = 'PAID'
            <if test="startDate != null">
                AND o.create_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND o.create_at &lt;= #{endDate}
            </if>
        </where>
    </select>

    <!-- 취소/환불 금액 -->
    <select id="adminSelectCancelAmount" parameterType="map" resultType="long">
        SELECT
        IFNULL( SUM(o.final_amount), 0 )
        FROM hollybam.orders o
        <where>
            <!-- 날짜가 넘어오면 시작일 조건 -->
            <if test="startDate != null">
                AND o.create_at &gt;= #{startDate}
            </if>
            <!-- 날짜가 넘어오면 종료일 조건 -->
            <if test="endDate != null">
                AND o.create_at &lt;= #{endDate}
            </if>
            <!-- 항상 적용되는 취소·환불 상태 필터 -->
            AND o.payment_status IN ('REFUNDED', 'CANCELLED')
        </where>
    </select>

    <!-- 총 결제 금액 - 취소/환불 금액 -->
    <select id="adminSelectSalesAmount" parameterType="map" resultType="long">
        SELECT
        -- 전체 결제액에서 취소·환불액을 뺀 뒤, NULL 이면 0
        IFNULL(
        IFNULL(SUM(o.final_amount),0)
        - IFNULL(
        SUM(
        CASE WHEN o.payment_status IN ('REFUNDED','CANCELLED')
        THEN o.final_amount
        ELSE 0
        END
        ), 0
        )
        , 0)
        AS salesAmount
        FROM hollybam.orders o
        <where>
            <if test="startDate != null">
                AND o.create_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND o.create_at &lt;= #{endDate}
            </if>
        </where>
    </select>

    <!-- 순수익(할인 금액을 제외한) -->
    <select id="adminSelectMargin" parameterType="map" resultType="long">
        SELECT
        -- ① 매출합계 (판매액 – 원가 + 배송비)
        IFNULL(
        (
        SELECT
        IFNULL(SUM(oi.total_price), 0)
        -- 옵션이 있으면 option_price_cost, 없으면 price_cost 사용
        - IFNULL(SUM(
        CASE
        WHEN oi.option_code IS NOT NULL
        THEN op.option_price_cost * oi.quantity
        ELSE pr.price_cost * oi.quantity
        END
        ), 0)
        + IFNULL(SUM(o.delivery_fee), 0)
        FROM hollybam.orders      o
        JOIN hollybam.order_items oi ON o.order_code = oi.order_code
        LEFT JOIN hollybam.price        pr ON oi.product_code = pr.product_code
        LEFT JOIN hollybam.option_price op ON oi.option_code   = op.option_code
        <where>
            <if test="startDate != null">
                AND o.create_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND o.create_at &lt;= #{endDate}
            </if>
        </where>
        )
        , 0)
        --
        - (
        -- ② 쿠폰 할인
        IFNULL(
        (
        SELECT SUM(cm.discount_amount)
        FROM hollybam.coupon_member cm
        JOIN hollybam.orders o2 ON cm.order_code = o2.order_code
        <where>
            <if test="startDate != null">
                AND o2.create_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND o2.create_at &lt;= #{endDate}
            </if>
            AND cm.used = 1
        </where>
        ), 0
        )
        +
        -- ③ 코드 할인
        IFNULL(
        (
        SELECT SUM(dcu.discount_amount)
        FROM hollybam.discount_code_usage dcu
        JOIN hollybam.orders o3 ON dcu.order_code = o3.order_code
        <where>
            <if test="startDate != null">
                AND o3.create_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND o3.create_at &lt;= #{endDate}
            </if>
        </where>
        ), 0
        )
        +
        -- ④ 포인트 사용
        IFNULL(
        (
        SELECT SUM(-p.point_change)
        FROM hollybam.point p
        JOIN hollybam.orders o4 ON p.related_order_code = o4.order_code
        <where>
            <if test="startDate != null">
                AND o4.create_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND o4.create_at &lt;= #{endDate}
            </if>
            AND p.point_type = 'USE'
        </where>
        ), 0
        )
        )
        AS margin;
    </select>

    <!-- 일별 매출 차트 - 전체 날짜 포함 -->
    <select id="adminSelectDailySalesChart" resultType="map">
    <![CDATA[
        WITH RECURSIVE date_range AS (
            SELECT #{startDate} as date_value
            UNION ALL
            SELECT DATE_ADD(date_value, INTERVAL 1 DAY)
            FROM date_range
            WHERE date_value < #{endDate}
        )
        SELECT
            DATE_FORMAT(dr.date_value, '%Y-%m-%d') as period,
            COALESCE(SUM(
                             CASE
                                 WHEN o.payment_status IN ('REFUNDED','CANCELLED') THEN 0
                                 ELSE o.final_amount
                                 END
                     ) - SUM(
                             CASE
                                 WHEN o.payment_status IN ('REFUNDED','CANCELLED') THEN o.final_amount
                                 ELSE 0
                                 END
                         ), 0) as salesAmount
        FROM date_range dr
                 LEFT JOIN (
            SELECT *
            FROM hollybam.orders
            WHERE payment_status = 'PAID'
        ) o ON DATE(o.create_at) = dr.date_value
        GROUP BY dr.date_value
        ORDER BY dr.date_value ASC
        ]]>
</select>

    <!-- 월별 매출 차트 - 전체 월 포함 -->
    <select id="adminSelectMonthlySalesChart" resultType="map">
    <![CDATA[
        WITH RECURSIVE month_range AS (
            SELECT LAST_DAY(#{startDate}) as month_end
            UNION ALL
            SELECT LAST_DAY(DATE_ADD(month_end, INTERVAL 1 DAY))
            FROM month_range
            WHERE month_end < #{endDate}
        )
        SELECT
            DATE_FORMAT(mr.month_end, '%Y-%m') as period,
            COALESCE(SUM(
                             CASE
                                 WHEN o.payment_status IN ('REFUNDED','CANCELLED') THEN 0
                                 ELSE o.final_amount
                                 END
                     ) - SUM(
                             CASE
                                 WHEN o.payment_status IN ('REFUNDED','CANCELLED') THEN o.final_amount
                                 ELSE 0
                                 END
                         ), 0) as salesAmount
        FROM month_range mr
                 LEFT JOIN hollybam.orders o ON DATE_FORMAT(o.create_at, '%Y-%m') = DATE_FORMAT(mr.month_end, '%Y-%m')
        WHERE payment_status = 'PAID'
        GROUP BY DATE_FORMAT(mr.month_end, '%Y-%m')
        ORDER BY DATE_FORMAT(mr.month_end, '%Y-%m') ASC
        ]]>
</select>

    <!-- 연도별 매출 차트 - 전체 연도 포함 -->
    <select id="adminSelectYearlySalesChart" resultType="map">
    <![CDATA[
        WITH RECURSIVE year_range AS (
            SELECT YEAR(#{startDate}) as year_value
            UNION ALL
            SELECT year_value + 1
            FROM year_range
            WHERE year_value < YEAR(#{endDate})
        )
        SELECT
            CAST(yr.year_value AS CHAR) as period,
            COALESCE(SUM(
                             CASE
                                 WHEN o.payment_status IN ('REFUNDED','CANCELLED') THEN 0
                                 ELSE o.final_amount
                                 END
                     ) - SUM(
                             CASE
                                 WHEN o.payment_status IN ('REFUNDED','CANCELLED') THEN o.final_amount
                                 ELSE 0
                                 END
                         ), 0) as salesAmount
        FROM year_range yr
                 LEFT JOIN hollybam.orders o ON YEAR(o.create_at) = yr.year_value
        WHERE payment_status = 'PAID'
        GROUP BY yr.year_value
        ORDER BY yr.year_value ASC
        ]]>
</select>

    <select id="getPaymentStatusCount" resultType="int" parameterType="String">
        select count(*)
        from hollybam.orders
        where payment_status = #{status} and order_status IS NULL
    </select>
    <select id="getOrderStatusCount" resultType="int" parameterType="String">
        select count(*)
        from hollybam.orders
        where order_status = #{status}
    </select>
    <select id="getDeliveryStatusCount" parameterType="String" resultType="int">
        select count(*)
        from hollybam.delivery
        where delivery_status = #{status}
    </select>

    <select id="getDescOrder" resultType="map">
        SELECT
            o.order_code as orderCode,
            o.order_id as orderId,
            o.orderer_name as ordererName,
            o.create_at as createAt,
            o.final_amount as finalAmount,
            COUNT(oi.order_item_code) AS itemCount,
            o.simple_status as status,
            MIN(p.product_name) AS productName  -- 대표 상품 하나만 (가장 빠른 이름 기준)
        FROM
            orders o
                JOIN
            order_items oi ON o.order_code = oi.order_code
                JOIN
            product p ON oi.product_code = p.product_code
        GROUP BY
            o.order_code,
            o.order_id,
            o.orderer_name,
            o.create_at,
            o.final_amount,
            o.simple_status
        ORDER BY
            o.create_at DESC
        LIMIT 5;
    </select>

    <select id="adminGetGuestCount" resultType="int">
        select count(*)
        from hollybam.guest
    </select>
</mapper>