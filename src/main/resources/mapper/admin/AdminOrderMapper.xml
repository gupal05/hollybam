<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hollybam.hollybam.dao.admin.IF_AdminOrderDao">

    <select id="getTotalOrderCount" resultType="int">
        SELECT COUNT(*)
        FROM orders
        WHERE payment_status != 'FAILED'
    </select>

    <select id="getPendingOrderCount" resultType="int">
        SELECT COUNT(*)
        FROM orders
        WHERE payment_status = 'PENDING'
    </select>

    <select id="getPaidOrderCount" resultType="int">
        SELECT COUNT(*)
        FROM orders
        WHERE payment_status = 'PAID' AND order_status IS NULL
    </select>

    <select id="getOrderPendingOrderCount" resultType="int">
        SELECT COUNT(*)
        FROM orders
        WHERE payment_status = 'PAID'
          AND order_status = 'PENDING'
    </select>

    <select id="getShippingOrderCount" resultType="int">
        SELECT COUNT(DISTINCT o.order_code)
        FROM orders o
                 JOIN delivery d ON o.order_code = d.order_code
        WHERE o.payment_status = 'PAID'
          AND o.order_status = 'SHIPPED'
          AND d.delivery_status = 'SHIPPING'
    </select>

    <select id="getDeliveryOrderCount" resultType="int">
        SELECT COUNT(DISTINCT o.order_code)
        FROM orders o
                 JOIN delivery d ON o.order_code = d.order_code
        WHERE o.payment_status = 'PAID'
          AND o.order_status = 'SHIPPED'
          AND d.delivery_status = 'DELIVERED'
    </select>

    <select id="getOrderCounts" resultType="map">
        <![CDATA[
            SELECT
                COUNT(*) AS total,                                                         -- 전체(FAILED 제외)
                SUM(CASE WHEN o.payment_status = 'PENDING' THEN 1 ELSE 0 END) AS payPending,
                SUM(CASE WHEN o.payment_status = 'PAID' AND o.order_status IS NULL THEN 1 ELSE 0 END) AS paid,
                SUM(CASE WHEN o.payment_status = 'PAID' AND o.order_status = 'PENDING' THEN 1 ELSE 0 END) AS orderPending,
                SUM(CASE WHEN o.payment_status = 'PAID' AND o.order_status = 'SHIPPED' THEN 1 ELSE 0 END) AS shipped,
                SUM(CASE WHEN o.payment_status = 'PAID'
                    AND o.order_status = 'SHIPPED'
                    AND EXISTS (
                        SELECT 1 FROM delivery d
                        WHERE d.order_code = o.order_code
                          AND d.delivery_status = 'SHIPPING'
                    )
                             THEN 1 ELSE 0 END) AS shipping,
                SUM(CASE WHEN o.payment_status = 'PAID'
                    AND o.order_status = 'SHIPPED'
                    AND EXISTS (
                        SELECT 1 FROM delivery d
                        WHERE d.order_code = o.order_code
                          AND d.delivery_status = 'DELIVERED'
                    )
                             THEN 1 ELSE 0 END) AS delivered
            FROM orders o
            WHERE o.payment_status != 'FAILED'
        ]]>
    </select>

    <select id="selectOrderSummaryWithStatus" resultType="map">
        <![CDATA[
            WITH top_product AS (
                SELECT
                    oi.order_code,
                    oi.product_code,
                    p.product_name,
                    ROW_NUMBER() OVER (
                        PARTITION BY oi.order_code
                        ORDER BY oi.order_item_code ASC
                        ) AS rn
                FROM order_items oi
                         JOIN product p ON p.product_code = oi.product_code
            ),
                 latest_delivery AS (
                     SELECT * FROM (
                                       SELECT
                                           d.*,
                                           ROW_NUMBER() OVER (
                                               PARTITION BY d.order_code
                                               ORDER BY COALESCE(d.updated_at, d.created_at) DESC, d.delivery_id DESC
                                               ) AS rn
                                       FROM delivery d
                                   ) x
                     WHERE x.rn = 1
                 ),
                 item_kinds AS (
                     SELECT
                         order_code,
                         COUNT(DISTINCT product_code) AS product_type_count
                     FROM order_items
                     GROUP BY order_code
                 )
            SELECT
                o.order_code           AS orderCode,
                o.order_id             AS orderId,
                o.create_at            AS createAt,
                o.receiver_name        AS receiverName,
                o.receiver_phone       AS receiverPhone,
                o.final_amount         AS finalAmount,
                o.delivery_fee         AS deliveryFee,
                o.receiver_addr        AS receiverAddr,
                o.receiver_addr_detail AS receiverAddrDetail,
                o.delivery_request     AS deliveryRequest,
                tp.product_code        AS productCode,
                tp.product_name        AS productName,
                COALESCE(ik.product_type_count, 0) AS productTypeCount,
                CASE
                    WHEN o.payment_status = 'PENDING' THEN 'PAYPENDING'
                    WHEN o.payment_status = 'PAID' AND o.order_status IS NULL THEN 'PAID'
                    WHEN o.payment_status = 'PAID' AND o.order_status IS NOT NULL THEN
                        CASE
                            WHEN o.order_status = 'SHIPPED' THEN
                                CASE
                                    WHEN ld.delivery_status IN ('SHIPPING','DELIVERED')
                                        THEN ld.delivery_status
                                    ELSE 'SHIPPED'
                                    END
                            WHEN o.order_status = 'PENDING' THEN 'ORDERPENDING'
                            ELSE o.order_status
                            END
                    ELSE o.payment_status
                    END AS status
            FROM orders o
                     JOIN top_product tp ON tp.order_code = o.order_code AND tp.rn = 1
                     LEFT JOIN latest_delivery ld ON ld.order_code = o.order_code
                     LEFT JOIN item_kinds ik ON ik.order_code = o.order_code
            WHERE o.payment_status <> 'FAILED'
            ORDER BY o.create_at DESC
        ]]>
    </select>

    <select id="getOrderListPending" resultType="map">
        <![CDATA[
        WITH top_product AS (
            SELECT
                oi.order_code,
                oi.product_code,
                p.product_name,
                ROW_NUMBER() OVER (
                    PARTITION BY oi.order_code
                    ORDER BY oi.order_item_code ASC
                    ) AS rn
            FROM order_items oi
                     JOIN product p ON p.product_code = oi.product_code
        ),
             latest_delivery AS (
                 SELECT * FROM (
                                   SELECT
                                       d.*,
                                       ROW_NUMBER() OVER (
                                           PARTITION BY d.order_code
                                           ORDER BY COALESCE(d.updated_at, d.created_at) DESC, d.delivery_id DESC
                                           ) AS rn
                                   FROM delivery d
                               ) x
                 WHERE x.rn = 1
             ),
             item_kinds AS (
                 SELECT
                     order_code,
                     COUNT(DISTINCT product_code) AS product_type_count
                 FROM order_items
                 GROUP BY order_code
             )
        SELECT
            o.order_code           AS orderCode,
            o.order_id             AS orderId,
            o.create_at            AS createAt,
            o.receiver_name        AS receiverName,
            o.receiver_phone       AS receiverPhone,
            o.final_amount         AS finalAmount,
            o.delivery_fee         AS deliveryFee,
            o.receiver_addr        AS receiverAddr,
            o.receiver_addr_detail AS receiverAddrDetail,
            o.delivery_request     AS deliveryRequest,
            tp.product_code        AS productCode,
            tp.product_name        AS productName,
            COALESCE(ik.product_type_count, 0) AS productTypeCount,
            CASE
                WHEN o.payment_status = 'PENDING' THEN 'PAYPENDING'
                WHEN o.payment_status = 'PAID' AND o.order_status IS NULL THEN 'PAID'
                WHEN o.payment_status = 'PAID' AND o.order_status IS NOT NULL THEN
                    CASE
                        WHEN o.order_status = 'SHIPPED' THEN
                            CASE
                                WHEN ld.delivery_status IN ('SHIPPING','DELIVERED')
                                    THEN ld.delivery_status
                                ELSE 'SHIPPED'
                                END
                        WHEN o.order_status = 'PENDING' THEN 'ORDERPENDING'
                        ELSE o.order_status
                        END
                ELSE o.payment_status
                END AS status
        FROM orders o
                 JOIN top_product tp ON tp.order_code = o.order_code AND tp.rn = 1
                 LEFT JOIN latest_delivery ld ON ld.order_code = o.order_code
                 LEFT JOIN item_kinds ik ON ik.order_code = o.order_code
        WHERE o.payment_status = 'PENDING'
        ORDER BY o.create_at DESC
        ]]>
    </select>

    <select id="getOrderListPaid" resultType="map">
        <![CDATA[
            WITH top_product AS (
                SELECT
                    oi.order_code,
                    oi.product_code,
                    p.product_name,
                    ROW_NUMBER() OVER (
                        PARTITION BY oi.order_code
                        ORDER BY oi.order_item_code ASC
                        ) AS rn
                FROM order_items oi
                         JOIN product p ON p.product_code = oi.product_code
            ),
                 latest_delivery AS (
                     SELECT * FROM (
                                       SELECT
                                           d.*,
                                           ROW_NUMBER() OVER (
                                               PARTITION BY d.order_code
                                               ORDER BY COALESCE(d.updated_at, d.created_at) DESC, d.delivery_id DESC
                                               ) AS rn
                                       FROM delivery d
                                   ) x
                     WHERE x.rn = 1
                 ),
                 item_kinds AS (
                     SELECT
                         order_code,
                         COUNT(DISTINCT product_code) AS product_type_count
                     FROM order_items
                     GROUP BY order_code
                 )
            SELECT
                o.order_code           AS orderCode,
                o.order_id             AS orderId,
                o.create_at            AS createAt,
                o.receiver_name        AS receiverName,
                o.receiver_phone       AS receiverPhone,
                o.final_amount         AS finalAmount,
                o.delivery_fee         AS deliveryFee,
                o.receiver_addr        AS receiverAddr,
                o.receiver_addr_detail AS receiverAddrDetail,
                o.delivery_request     AS deliveryRequest,
                tp.product_code        AS productCode,
                tp.product_name        AS productName,
                COALESCE(ik.product_type_count, 0) AS productTypeCount,
                CASE
                    WHEN o.payment_status = 'PENDING' THEN 'PAYPENDING'
                    WHEN o.payment_status = 'PAID' AND o.order_status IS NULL THEN 'PAID'
                    WHEN o.payment_status = 'PAID' AND o.order_status IS NOT NULL THEN
                        CASE
                            WHEN o.order_status = 'SHIPPED' THEN
                                CASE
                                    WHEN ld.delivery_status IN ('SHIPPING','DELIVERED')
                                        THEN ld.delivery_status
                                    ELSE 'SHIPPED'
                                    END
                            WHEN o.order_status = 'PENDING' THEN 'ORDERPENDING'
                            ELSE o.order_status
                            END
                    ELSE o.payment_status
                    END AS status
            FROM orders o
                     JOIN top_product tp ON tp.order_code = o.order_code AND tp.rn = 1
                     LEFT JOIN latest_delivery ld ON ld.order_code = o.order_code
                     LEFT JOIN item_kinds ik ON ik.order_code = o.order_code
            WHERE o.payment_status = 'PAID'
              AND o.order_status IS NULL
            ORDER BY o.create_at DESC
            ]]>
    </select>

    <select id="getOrderListOrderPending" resultType="map">
        <![CDATA[
        WITH top_product AS (
            SELECT
                oi.order_code,
                oi.product_code,
                p.product_name,
                ROW_NUMBER() OVER (
                    PARTITION BY oi.order_code
                    ORDER BY oi.order_item_code ASC
                    ) AS rn
            FROM order_items oi
                     JOIN product p ON p.product_code = oi.product_code
        ),
             latest_delivery AS (
                 SELECT * FROM (
                                   SELECT
                                       d.*,
                                       ROW_NUMBER() OVER (
                                           PARTITION BY d.order_code
                                           ORDER BY COALESCE(d.updated_at, d.created_at) DESC, d.delivery_id DESC
                                           ) AS rn
                                   FROM delivery d
                               ) x
                 WHERE x.rn = 1
             ),
             item_kinds AS (
                 SELECT
                     order_code,
                     COUNT(DISTINCT product_code) AS product_type_count
                 FROM order_items
                 GROUP BY order_code
             )
        SELECT
            o.order_code           AS orderCode,
            o.order_id             AS orderId,
            o.create_at            AS createAt,
            o.receiver_name        AS receiverName,
            o.receiver_phone       AS receiverPhone,
            o.final_amount         AS finalAmount,
            o.delivery_fee         AS deliveryFee,
            o.receiver_addr        AS receiverAddr,
            o.receiver_addr_detail AS receiverAddrDetail,
            o.delivery_request     AS deliveryRequest,
            tp.product_code        AS productCode,
            tp.product_name        AS productName,
            COALESCE(ik.product_type_count, 0) AS productTypeCount,
            CASE
                WHEN o.payment_status = 'PENDING' THEN 'PAYPENDING'
                WHEN o.payment_status = 'PAID' AND o.order_status IS NULL THEN 'PAID'
                WHEN o.payment_status = 'PAID' AND o.order_status IS NOT NULL THEN
                    CASE
                        WHEN o.order_status = 'SHIPPED' THEN
                            CASE
                                WHEN ld.delivery_status IN ('SHIPPING','DELIVERED')
                                    THEN ld.delivery_status
                                ELSE 'SHIPPED'
                                END
                        WHEN o.order_status = 'PENDING' THEN 'ORDERPENDING'
                        ELSE o.order_status
                        END
                ELSE o.payment_status
                END AS status
        FROM orders o
                 JOIN top_product tp ON tp.order_code = o.order_code AND tp.rn = 1
                 LEFT JOIN latest_delivery ld ON ld.order_code = o.order_code
                 LEFT JOIN item_kinds ik ON ik.order_code = o.order_code
        WHERE o.payment_status = 'PAID'
          AND o.order_status = 'PENDING'
        ORDER BY o.create_at DESC
        ]]>
    </select>

    <select id="getOrderListShipping" resultType="map">
      <![CDATA[
            WITH top_product AS (
                SELECT
                    oi.order_code,
                    oi.product_code,
                    p.product_name,
                    ROW_NUMBER() OVER (
                        PARTITION BY oi.order_code
                        ORDER BY oi.order_item_code ASC
                        ) AS rn
                FROM order_items oi
                         JOIN product p ON p.product_code = oi.product_code
            ),
                 latest_delivery AS (
                     SELECT * FROM (
                                       SELECT
                                           d.*,
                                           ROW_NUMBER() OVER (
                                               PARTITION BY d.order_code
                                               ORDER BY COALESCE(d.updated_at, d.created_at) DESC, d.delivery_id DESC
                                               ) AS rn
                                       FROM delivery d
                                   ) x
                     WHERE x.rn = 1
                 ),
                 item_kinds AS (
                     SELECT
                         order_code,
                         COUNT(DISTINCT product_code) AS product_type_count
                     FROM order_items
                     GROUP BY order_code
                 )

            SELECT
                o.order_code           AS orderCode,
                o.order_id             AS orderId,
                o.create_at            AS createAt,
                o.receiver_name        AS receiverName,
                o.receiver_phone       AS receiverPhone,
                o.final_amount         AS finalAmount,
                o.delivery_fee         AS deliveryFee,
                o.receiver_addr        AS receiverAddr,
                o.receiver_addr_detail AS receiverAddrDetail,
                o.delivery_request     AS deliveryRequest,
                tp.product_code        AS productCode,
                tp.product_name        AS productName,
                COALESCE(ik.product_type_count, 0) AS productTypeCount,
                'SHIPPING' AS status
            FROM orders o
                     JOIN top_product tp
                          ON tp.order_code = o.order_code AND tp.rn = 1
                     JOIN latest_delivery ld
                          ON ld.order_code = o.order_code                -- 최신 배송만
                     LEFT JOIN item_kinds ik
                               ON ik.order_code = o.order_code
            WHERE o.payment_status = 'PAID'
              AND o.order_status   = 'SHIPPED'
              AND ld.delivery_status = 'SHIPPING'
            ORDER BY o.create_at DESC
            ]]>
    </select>

    <select id="getOrderListDelivered" resultType="map">
      <![CDATA[
        WITH top_product AS (
            SELECT
                oi.order_code,
                oi.product_code,
                p.product_name,
                ROW_NUMBER() OVER (
                    PARTITION BY oi.order_code
                    ORDER BY oi.order_item_code ASC
                    ) AS rn
            FROM order_items oi
                     JOIN product p ON p.product_code = oi.product_code
        ),
             latest_delivery AS (
                 SELECT * FROM (
                                   SELECT
                                       d.*,
                                       ROW_NUMBER() OVER (
                                           PARTITION BY d.order_code
                                           ORDER BY COALESCE(d.updated_at, d.created_at) DESC, d.delivery_id DESC
                                           ) AS rn
                                   FROM delivery d
                               ) x
                 WHERE x.rn = 1
             ),
             item_kinds AS (
                 SELECT
                     order_code,
                     COUNT(DISTINCT product_code) AS product_type_count
                 FROM order_items
                 GROUP BY order_code
             )

        SELECT
            o.order_code           AS orderCode,
            o.order_id             AS orderId,
            o.create_at            AS createAt,
            o.receiver_name        AS receiverName,
            o.receiver_phone       AS receiverPhone,
            o.final_amount         AS finalAmount,
            o.delivery_fee         AS deliveryFee,
            o.receiver_addr        AS receiverAddr,
            o.receiver_addr_detail AS receiverAddrDetail,
            o.delivery_request     AS deliveryRequest,
            tp.product_code        AS productCode,
            tp.product_name        AS productName,
            COALESCE(ik.product_type_count, 0) AS productTypeCount,
            'SHIPPING' AS status
        FROM orders o
                 JOIN top_product tp
                      ON tp.order_code = o.order_code AND tp.rn = 1
                 JOIN latest_delivery ld
                      ON ld.order_code = o.order_code                -- 최신 배송만
                 LEFT JOIN item_kinds ik
                           ON ik.order_code = o.order_code
        WHERE o.payment_status = 'PAID'
          AND o.order_status   = 'SHIPPED'
          AND ld.delivery_status = 'DELIVERED'
        ORDER BY o.create_at DESC
        ]]>
    </select>

    <select id="selectOrderDetail" resultType="map">
        <![CDATA[
            WITH top_product AS (
                SELECT
                    oi.order_code,
                    oi.product_code,
                    p.product_name,
                    p.product_id,
                    ROW_NUMBER() OVER (
                        PARTITION BY oi.order_code
                        ORDER BY oi.order_item_code ASC
                        ) AS rn
                FROM order_items oi
                         JOIN product p ON p.product_code = oi.product_code
            ),
                 latest_delivery AS (
                     SELECT * FROM (
                                       SELECT
                                           d.*,
                                           ROW_NUMBER() OVER (
                                               PARTITION BY d.order_code
                                               ORDER BY COALESCE(d.updated_at, d.created_at) DESC, d.delivery_id DESC
                                               ) AS rn
                                       FROM delivery d
                                   ) x
                     WHERE x.rn = 1
                 ),
                 item_kinds AS (
                     SELECT
                         order_code,
                         COUNT(DISTINCT product_code) AS product_type_count
                     FROM order_items
                     GROUP BY order_code
                 )
            SELECT
                o.order_code           AS orderCode,
                o.order_id             AS orderId,
                o.create_at            AS orderCreateAt,
                o.payment_method       AS paymentMethod,
                o.orderer_name         AS ordererName,
                o.orderer_phone        AS ordererPhone,
                o.orderer_email        AS ordererEmail,
                o.receiver_name        AS receiverName,
                o.receiver_phone       AS receiverPhone,
                o.final_amount         AS finalAmount,
                o.delivery_fee         AS deliveryFee,
                o.discount_amount      AS discountAmount,
                o.total_amount         AS totalAmount,
                o.receiver_zip         AS receiverZip,
                o.receiver_addr        AS receiverAddr,
                o.receiver_addr_detail AS receiverAddrDetail,
                o.delivery_request     AS deliveryRequest,
                tp.product_code        AS productCode,
                tp.product_name        AS productName,
                COALESCE(ik.product_type_count, 0) AS productTypeCount,
                ld.tracking_number     AS trackingNumber,
                pl.created_at          AS payCreateAt,
                CASE
                    WHEN o.payment_status = 'PENDING' THEN 'PAYPENDING'
                    WHEN o.payment_status = 'PAID' AND o.order_status IS NULL THEN 'PAID'
                    WHEN o.payment_status = 'PAID' AND o.order_status IS NOT NULL THEN
                        CASE
                            WHEN o.order_status = 'SHIPPED' THEN
                                CASE
                                    WHEN ld.delivery_status IN ('SHIPPING','DELIVERED')
                                        THEN ld.delivery_status
                                    ELSE 'SHIPPED'
                                    END
                            WHEN o.order_status = 'PENDING' THEN 'ORDERPENDING'
                            ELSE o.order_status
                            END
                    ELSE o.payment_status
                    END AS status
            FROM orders o
                     JOIN top_product tp ON tp.order_code = o.order_code AND tp.rn = 1
                     LEFT JOIN latest_delivery ld ON ld.order_code = o.order_code
                     LEFT JOIN item_kinds ik ON ik.order_code = o.order_code
                     LEFT JOIN payment_log pl ON pl.order_code = o.order_code
            WHERE o.order_id = #{orderId}
            ORDER BY o.create_at DESC
            ]]>
    </select>

    <select id="selectOrderItemsByOrderCode" resultType="map">
      <![CDATA[
            WITH title_image AS (
                SELECT
                    i.product_code,
                    i.image_url,
                    ROW_NUMBER() OVER (
                        PARTITION BY i.product_code
                        ORDER BY i.image_order ASC, i.image_code ASC
                        ) AS rn
                FROM image i
                WHERE i.image_type = 'title'
            )
            SELECT
                oi.order_item_code                         AS orderItemCode,
                oi.order_code                              AS orderCode,
                oi.product_code                            AS productCode,
                oi.option_code                             AS optionCode,
                p.product_name                             AS productName,
                p.product_id                               AS productId,
                po.option_name                             AS optionName,
                po.option_value                            AS optionValue,
                oi.quantity                                AS quantity,
                oi.unit_price                              AS unitPrice,
                COALESCE(oi.option_price, 0)               AS optionPrice,
                (oi.unit_price + COALESCE(oi.option_price,0)) AS unitWithOption, -- 단가+옵션가
                oi.total_price                             AS totalPrice,
                ti.image_url                               AS imageUrl
            FROM order_items oi
                     JOIN product p           ON p.product_code = oi.product_code
                     LEFT JOIN product_option po
                               ON po.option_code = oi.option_code
                     LEFT JOIN title_image ti ON ti.product_code = oi.product_code AND ti.rn = 1
            WHERE oi.order_code = #{orderCode}
            ORDER BY oi.order_item_code ASC
            ]]>
    </select>

    <select id="getDiscountType" parameterType="int" resultType="map">
        SELECT
            o.order_code as orderCode,
            COALESCE(cm.coupon_code, '') as couponCode,
            COALESCE(c.coupon_id, '') AS couponId,
            COALESCE(cm.discount_amount, 0) AS couponDiscountAmount,
            COALESCE(dcu.discount_code, '') as discountCode,
            COALESCE(d.discount_id, '') AS discountId,
            COALESCE(dcu.discount_amount, 0) AS discountAmount,
            COALESCE(SUM(CASE WHEN p.point_type = 'USE' THEN p.point_change END), 0) AS usedPointAmount
        FROM orders o
                 LEFT JOIN coupon_member cm
                           ON o.order_code = cm.order_code
                 LEFT JOIN coupon c
                           ON cm.coupon_code = c.coupon_code
                 LEFT JOIN discount_code_usage dcu
                           ON o.order_code = dcu.order_code
                 LEFT JOIN discount d
                           ON dcu.discount_code = d.discount_code
                 LEFT JOIN point p
                           ON o.order_code = p.related_order_code
                               AND p.point_type = 'USE'
        WHERE o.order_code = #{orderCode}
        GROUP BY
            o.order_code, cm.coupon_code, c.coupon_id, cm.discount_amount,
            dcu.discount_code, d.discount_id, dcu.discount_amount
    </select>

    <select id="getOrderCodeByOrderId" parameterType="String" resultType="int">
        select order_code
        from orders
        where order_id = #{orderId}
    </select>

    <select id="getDeliveryStatusCount" parameterType="int" resultType="int">
        select count(*)
        from hollybam.delivery
        where order_code = #{orderCode}
    </select>

    <update id="updateDeliveryStatusNull" parameterType="int">
        delete from delivery
        WHERE order_code IN
        <foreach collection="orderCodes" item="oc" open="(" separator="," close=")">
            #{oc}
        </foreach>
    </update>

    <update id="updatePayPendingStatus" parameterType="map">
        UPDATE orders
        SET payment_status = 'PENDING',
        simple_status  = 'PENDING',
        order_status   = NULL
        WHERE order_code IN
        <foreach collection="orderCodes" item="oc" open="(" separator="," close=")">
            #{oc}
        </foreach>
    </update>

    <update id="updatePaidStatus" parameterType="int">
        update orders
        set payment_status = 'PAID', simple_status = 'PAID', order_status = null
        where order_code IN
        <foreach collection="orderCodes" item="oc" open="(" separator="," close=")">
            #{oc}
        </foreach>
    </update>

    <update id="updateOrderPendingStatus" parameterType="int">
        update orders
        set order_status = 'PENDING', payment_status = 'PAID', simple_status = 'PAID'
        where order_code IN
        <foreach collection="orderCodes" item="oc" open="(" separator="," close=")">
            #{oc}
        </foreach>
    </update>

    <select id="getDeliveryMemo" parameterType="int" resultType="String">
        select delivery_request
        from orders
        where order_code = #{orderCode}
    </select>

    <insert id="insertDeliveryStatus" parameterType="java.util.List">
        INSERT INTO delivery (
        order_code, courier, tracking_number, shipped_at, delivery_status, delivery_memo
        )
        VALUES
        <foreach collection="orders" item="row" separator=",">
            (#{row.orderCode}, 'CJ대한통운', #{row.trackingNumber}, NOW(), 'SHIPPING', #{row.deliveryMemo})
        </foreach>
    </insert>

    <update id="updateShippingStatus" parameterType="int">
        UPDATE orders o
        SET
            o.payment_status = 'PAID',
            o.order_status  = 'SHIPPED',
            o.simple_status = 'SHIPPING'
        where order_code IN
        <foreach collection="orderCodes" item="oc" open="(" separator="," close=")">
            #{oc}
        </foreach>
    </update>

    <update id="updateDeliveredStatus" parameterType="int">
        update delivery d
        JOIN orders o ON o.order_code = d.order_code
        set
            o.payment_status = 'PAID',
            o.order_status = 'SHIPPED',
            d.delivery_status = 'DELIVERED',
            o.simple_status = 'DELIVERED'
        where d.order_code IN
        <foreach collection="orderCodes" item="oc" open="(" separator="," close=")">
            #{oc}
        </foreach>
    </update>
</mapper>